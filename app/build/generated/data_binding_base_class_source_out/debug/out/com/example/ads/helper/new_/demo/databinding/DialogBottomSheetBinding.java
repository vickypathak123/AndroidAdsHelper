// Generated by view binder compiler. Do not edit!
package com.example.ads.helper.new_.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ads.helper.new_.demo.R;
import com.example.app.ads.helper.banner.BannerAdView;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogBottomSheetBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Barrier barrier2;

  @NonNull
  public final MaterialCardView exitCardNo;

  @NonNull
  public final MaterialCardView exitCardYes;

  @NonNull
  public final TextView exitTvDesc;

  @NonNull
  public final TextView exitTvTitle;

  @NonNull
  public final BannerAdView flNativeAdPlaceHolderBig;

  @NonNull
  public final ImageView ivDelete;

  private DialogBottomSheetBinding(@NonNull MaterialCardView rootView, @NonNull Barrier barrier2,
      @NonNull MaterialCardView exitCardNo, @NonNull MaterialCardView exitCardYes,
      @NonNull TextView exitTvDesc, @NonNull TextView exitTvTitle,
      @NonNull BannerAdView flNativeAdPlaceHolderBig, @NonNull ImageView ivDelete) {
    this.rootView = rootView;
    this.barrier2 = barrier2;
    this.exitCardNo = exitCardNo;
    this.exitCardYes = exitCardYes;
    this.exitTvDesc = exitTvDesc;
    this.exitTvTitle = exitTvTitle;
    this.flNativeAdPlaceHolderBig = flNativeAdPlaceHolderBig;
    this.ivDelete = ivDelete;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier2;
      Barrier barrier2 = ViewBindings.findChildViewById(rootView, id);
      if (barrier2 == null) {
        break missingId;
      }

      id = R.id.exit_card_no;
      MaterialCardView exitCardNo = ViewBindings.findChildViewById(rootView, id);
      if (exitCardNo == null) {
        break missingId;
      }

      id = R.id.exit_card_yes;
      MaterialCardView exitCardYes = ViewBindings.findChildViewById(rootView, id);
      if (exitCardYes == null) {
        break missingId;
      }

      id = R.id.exit_tv_desc;
      TextView exitTvDesc = ViewBindings.findChildViewById(rootView, id);
      if (exitTvDesc == null) {
        break missingId;
      }

      id = R.id.exit_tv_title;
      TextView exitTvTitle = ViewBindings.findChildViewById(rootView, id);
      if (exitTvTitle == null) {
        break missingId;
      }

      id = R.id.fl_native_ad_place_holder_big;
      BannerAdView flNativeAdPlaceHolderBig = ViewBindings.findChildViewById(rootView, id);
      if (flNativeAdPlaceHolderBig == null) {
        break missingId;
      }

      id = R.id.ivDelete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      return new DialogBottomSheetBinding((MaterialCardView) rootView, barrier2, exitCardNo,
          exitCardYes, exitTvDesc, exitTvTitle, flNativeAdPlaceHolderBig, ivDelete);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
