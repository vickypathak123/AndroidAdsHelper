// Generated by view binder compiler. Do not edit!
package com.example.app.ads.helper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app.ads.helper.R;
import com.example.app.ads.helper.purchase.widget.SubscriptionRatingBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomInfinitePagerLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SubscriptionRatingBar ratingBar;

  @NonNull
  public final TextView txtRating;

  @NonNull
  public final TextView txtRatingBy;

  @NonNull
  public final TextView txtRatingHeader;

  private CustomInfinitePagerLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull SubscriptionRatingBar ratingBar, @NonNull TextView txtRating,
      @NonNull TextView txtRatingBy, @NonNull TextView txtRatingHeader) {
    this.rootView = rootView;
    this.ratingBar = ratingBar;
    this.txtRating = txtRating;
    this.txtRatingBy = txtRatingBy;
    this.txtRatingHeader = txtRatingHeader;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomInfinitePagerLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomInfinitePagerLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_infinite_pager_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomInfinitePagerLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rating_bar;
      SubscriptionRatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.txt_rating;
      TextView txtRating = ViewBindings.findChildViewById(rootView, id);
      if (txtRating == null) {
        break missingId;
      }

      id = R.id.txt_rating_by;
      TextView txtRatingBy = ViewBindings.findChildViewById(rootView, id);
      if (txtRatingBy == null) {
        break missingId;
      }

      id = R.id.txt_rating_header;
      TextView txtRatingHeader = ViewBindings.findChildViewById(rootView, id);
      if (txtRatingHeader == null) {
        break missingId;
      }

      return new CustomInfinitePagerLayoutBinding((ConstraintLayout) rootView, ratingBar, txtRating,
          txtRatingBy, txtRatingHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
